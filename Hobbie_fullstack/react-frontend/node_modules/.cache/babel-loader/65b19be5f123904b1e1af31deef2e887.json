{"ast":null,"code":"var _jsxFileName = \"/home/nix/Documents/my_apps/Hobbie_fullstack/react-frontend/src/components/Login.jsx\";\nimport React from 'react';\nimport blueImg from '/src/img/blueImg.png';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService';\n\nconst Login = props => {\n  let navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [loginState, setLoginState] = useState({\n    hasLoginFailed: false,\n    showSuccessMessage: false\n  });\n\n  const loginClicked = event => {\n    event.preventDefault();\n\n    if (credentials.username === 'business' && credentials.password === '123') {\n      AuthenticationService.registerSuccessfulLoginBusiness(credentials.username);\n      navigate(\"/business-owner\");\n      setLoginState(prevState => ({ ...prevState,\n        hasLoginFailed: false\n      }));\n      setLoginState(prevState => ({ ...prevState,\n        showSuccessMessage: true\n      }));\n      window.location.reload(false);\n    } else if (credentials.username === 'user' && credentials.password === '123') {\n      AuthenticationService.registerSuccessfulLoginUser(credentials.username);\n      navigate(\"/user-home\");\n      setLoginState(prevState => ({ ...prevState,\n        hasLoginFailed: false\n      }));\n      setLoginState(prevState => ({ ...prevState,\n        showSuccessMessage: true\n      }));\n      window.location.reload(false);\n    } else {\n      setLoginState(prevState => ({ ...prevState,\n        hasLoginFailed: true\n      }));\n      setLoginState(prevState => ({ ...prevState,\n        showSuccessMessage: false\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginh1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 35\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, loginState.hasLoginFailed && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midErrors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 36\n    }\n  }, \" Invalid credentials\"), loginState.showSuccessMessage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"midErrors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 39\n    }\n  }, \"Login successful\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    onChange: e => setCredentials({ ...credentials,\n      username: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    id: \"name\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Username\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    onChange: e => setCredentials({ ...credentials,\n      password: e.target.value\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }, \"Password\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button button2\",\n    onClick: loginClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, \"Login\")))), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"blueImg2\",\n    src: blueImg,\n    alt: \"blueImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/nix/Documents/my_apps/Hobbie_fullstack/react-frontend/src/components/Login.jsx"],"names":["React","blueImg","useState","useNavigate","AuthenticationService","Login","props","navigate","credentials","setCredentials","username","password","loginState","setLoginState","hasLoginFailed","showSuccessMessage","loginClicked","event","preventDefault","registerSuccessfulLoginBusiness","prevState","window","location","reload","registerSuccessfulLoginUser","e","target","value"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport blueImg from '/src/img/blueImg.png'\nimport { useState } from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService'\n\n\n\n\nconst Login = (props) => {\n    let navigate = useNavigate();\n    const [credentials, setCredentials] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [loginState, setLoginState] = useState({\n        hasLoginFailed: false,\n        showSuccessMessage: false\n    })\n  \n    \n    const loginClicked= (event) =>{\n        event.preventDefault();\n      \n        if(credentials.username === 'business' && credentials.password === '123'){\n            AuthenticationService.registerSuccessfulLoginBusiness(credentials.username)\n            navigate(\"/business-owner\")\n        \n            setLoginState(prevState => ({...prevState,hasLoginFailed:false}))\n            setLoginState(prevState =>({...prevState,showSuccessMessage:true}))\n            window.location.reload(false)\n        }\n       else if(credentials.username === 'user' && credentials.password === '123'){\n            AuthenticationService.registerSuccessfulLoginUser(credentials.username)\n            navigate(\"/user-home\")\n        \n            setLoginState(prevState => ({...prevState,hasLoginFailed:false}))\n            setLoginState(prevState =>({...prevState,showSuccessMessage:true}))\n            window.location.reload(false)\n        }\n        else {\n            setLoginState(prevState => ({...prevState,hasLoginFailed:true}))\n            setLoginState(prevState =>({...prevState,showSuccessMessage:false}))\n                }\n             \n    }\n        \n        return (\n        <div>\n             <form className=\"test\">\n         <div className=\"loginh1\"><h1 >Login</h1></div>\n     {/* <div style=\"display:none\"> LOGIN_PAGE_IDENTIFIER</div> */}\n    <div className=\"login\" >\n  <div className=\"row\">\n  \n    {loginState.hasLoginFailed &&  <div  className=\"midErrors\" > Invalid credentials</div>}\n    {loginState.showSuccessMessage && <div className=\"midErrors\">Login successful</div>}\n  \n\n  <div className=\"form-field\">\n    <div className=\"name-section\">\n        <input type=\"text\" name=\"username\"  onChange={e => setCredentials({...credentials, username : e.target.value})} required/>\n        <label id=\"name\" className=\"label-name\">\n            <span className=\"content-name\">Username</span>\n        </label>\n    </div>\n    </div>\n    </div>\n              <div className=\"row\">\n                <div className=\"form-field\">\n                  <div className=\"name-section\">\n                      <input type=\"password\"  name=\"password\"  onChange={e => setCredentials({...credentials, password : e.target.value})}  required/>\n                      <label htmlFor=\"password\" className=\"label-name\">\n                          <span className=\"content-name\">Password</span>\n                      </label>\n                  </div>\n                  </div>\n                  </div>\n                     \n                        <div className=\"form-field\">\n                      <button className=\"button button2\"  onClick={loginClicked}>Login</button>\n                        </div>\n\n                        \n                    \n    </div>\n\n </form>\n\n<img className=\"blueImg2\" src={blueImg} alt=\"blueImg\"></img>\n        </div>\n        )\n}\n\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}