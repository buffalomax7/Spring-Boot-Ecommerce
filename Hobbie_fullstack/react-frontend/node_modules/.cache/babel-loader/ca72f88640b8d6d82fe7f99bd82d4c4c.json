{"ast":null,"code":"var _jsxFileName = \"/home/nix/Documents/my_apps/Hobbie_fullstack/react-frontend/src/components/RegisterBusiness.jsx\";\nimport React from 'react';\nimport blueImg from '/home/nix/my-apps/Hobbie_fullstack/react-frontend/src/img/blueImg.png';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegisterBusiness = () => {\n  let navigate = useNavigate();\n  const [registerState, setRegisterState] = useState({\n    userNameOrEmailExist: false,\n    invalidUserName: false,\n    invalidBusinessName: false,\n    invalidAdress: false,\n    emtpyGender: false,\n    invalidEmail: false,\n    invalidPassword: false,\n    passwordsDontMatch: false\n  }); // new \n\n  const [info, setInfo] = useState({\n    username: '',\n    businessName: '',\n    address: '',\n    email: '',\n    password: '',\n    repeatpassword: ''\n  });\n  const [errors, setErrors] = useState({});\n\n  const validate = () => {\n    const errors = {}; //TODO username or email already exists?\n\n    if (!info.username) {\n      errors.username = 'Username is required';\n    } else if (info.username.length < 5) {\n      errors.username = 'Username must be at least 5 characters long';\n    }\n\n    if (!info.businessName) {\n      errors.businessName = \"Business name is required\";\n    } else if (info.businessName.length < 2 || info.businessName.length > 20) {\n      errors.businessName = \"Text has to be between 2 and 20 characters long\";\n    }\n\n    if (!info.address) {\n      errors.address = \"Address is required\";\n    }\n\n    if (!info.email) {\n      errors.email = 'Email is required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(info.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    if (!info.password) {\n      errors.password = \"A password is required\";\n    }\n\n    if (!info.repeatpassword) {\n      errors.repeatpassword = \"Please repeate the password\";\n    }\n\n    if (info.password !== info.repeatpassword) {\n      errors.repeatpassword = \"Passwords don't match\";\n    }\n\n    return errors;\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    let errors = validate(info);\n    setErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      console.log(info);\n      navigate(\"/business-owner\");\n    } else {\n      console.log(errors);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, \"Register your business\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"USERname\",\n    onChange: e => setInfo({ ...info,\n      username: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    id: \"USERname\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Username\"), errors.username && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 34\n    }\n  }, errors.username))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"businessName\",\n    onChange: e => setInfo({ ...info,\n      businessName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    forhtml: \"businessName\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"Business Name\"), errors.businessName && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 42\n    }\n  }, errors.businessName))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    onChange: e => setInfo({ ...info,\n      address: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    forhtml: \"address\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Address\"), errors.address && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 40\n    }\n  }, errors.address)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"enail\",\n    onChange: e => setInfo({ ...info,\n      email: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    forhtml: \"email\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, \"Email\"), errors.email && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 40\n    }\n  }, errors.email))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: e => setInfo({ ...info,\n      password: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    forhtml: \"password\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 27\n    }\n  }, \"Password\"), errors.password && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 47\n    }\n  }, errors.password))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"repeatpassword\",\n    id: \"repeatpassword\",\n    onChange: e => setInfo({ ...info,\n      repeatpassword: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    forhtml: \"repeatpassword\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 31\n    }\n  }, errors.repeatpassword), errors.repeatpassword && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"errors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 57\n    }\n  }, errors.repeatpassword))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button button2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }, \"Sign up\")))), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"blueImg2\",\n    src: blueImg,\n    alt: \"blueImg2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default RegisterBusiness;","map":{"version":3,"sources":["/home/nix/Documents/my_apps/Hobbie_fullstack/react-frontend/src/components/RegisterBusiness.jsx"],"names":["React","blueImg","useState","useNavigate","RegisterBusiness","navigate","registerState","setRegisterState","userNameOrEmailExist","invalidUserName","invalidBusinessName","invalidAdress","emtpyGender","invalidEmail","invalidPassword","passwordsDontMatch","info","setInfo","username","businessName","address","email","password","repeatpassword","errors","setErrors","validate","length","test","submitHandler","event","preventDefault","Object","keys","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport blueImg from '/home/nix/my-apps/Hobbie_fullstack/react-frontend/src/img/blueImg.png'\nimport { useState } from 'react'\nimport {useNavigate} from 'react-router-dom'\n\nconst RegisterBusiness = () => {\n    let navigate = useNavigate();\n\n\n    const [registerState, setRegisterState] = useState({\n        userNameOrEmailExist: false,\n        invalidUserName: false,\n        invalidBusinessName: false,\n        invalidAdress: false,\n        emtpyGender: false,\n        invalidEmail: false,\n        invalidPassword: false,\n        passwordsDontMatch: false\n\n    });\n  \n\n    // new \n\n\n   \n    const [info, setInfo] = useState({\n        username: '',\n        businessName: '',\n        address: '',\n        email: '',\n        password: '',\n        repeatpassword: ''\n    });\n\n    const [errors, setErrors] = useState({});\n\n\n    const validate = () => {\n        const errors = {};\n    \n        //TODO username or email already exists?\n\n        if (!info.username) {\n            errors.username = 'Username is required'\n        } else if (info.username.length < 5) {\n        errors.username = 'Username must be at least 5 characters long'\n        }\n    \n        if (!info.businessName) {\n            errors.businessName = \"Business name is required\"\n        } else if (info.businessName.length < 2 || info.businessName.length > 20) {\n            errors.businessName = \"Text has to be between 2 and 20 characters long\"\n        }\n\n        if (!info.address) {\n            errors.address = \"Address is required\"\n        }\n        \n     if (!info.email) {\n             errors.email = 'Email is required';\n     } else if (\n             !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(info.email)\n     ) {\n             errors.email = 'Invalid email address';\n     }\n\n     if (!info.password) {\n        errors.password = \"A password is required\"\n    }\n    if (!info.repeatpassword) {\n        errors.repeatpassword = \"Please repeate the password\"\n    }\n    if (info.password !== info.repeatpassword) {\n        errors.repeatpassword = \"Passwords don't match\"\n    }\n    \n     return errors;\n    }\n    \n\n\n  \n    const submitHandler= (event) =>{\n        event.preventDefault();\n        let errors = validate(info)\n        setErrors(errors);\n        \n        if(Object.keys(errors).length === 0){\n            console.log(info)\n            navigate(\"/business-owner\")\n        }\n        else {\n            console.log(errors);\n        }\n    }\n\n    \n    return (\n        <div>\n            <div className=\"test\">\n    <h2>Register your business</h2>\n{/*  \n    {registerState.userNameOrEmailExist &&  <div className=\"errors\" >\n         This username, business name or email already exist.\n     </div>} */}\n    <form onSubmit={submitHandler}>\n\n  <div className=\"row\">\n  <div className=\"form-field\">\n    <div className=\"name-section\">\n            <input type=\"text\" name=\"USERname\"onChange={e => setInfo({...info, username : e.target.value})}  />\n        <label id=\"USERname\" className=\"label-name\">\n            <span className=\"content-name\">Username</span>\n            {errors.username  && <small className=\"errors\">{errors.username}</small>} \n        </label>\n    </div>\n    </div>\n    </div>\n    <div className=\"row\">\n        <div className=\"form-field\">\n          <div className=\"name-section\">\n              <input type=\"text\" name=\"businessName\" onChange={e => setInfo({...info, businessName : e.target.value})}  />\n              <label forhtml=\"businessName\" className=\"label-name\">\n                  <span className=\"content-name\">Business Name</span>\n                  {errors.businessName&& <small className=\"errors\">{errors.businessName}</small>}\n              </label>\n          </div>\n          </div>\n          </div>\n          <div className=\"form-field\">\n            <div className=\"name-section\">\n                <input type=\"text\" name=\"address\" onChange={e => setInfo({...info, address : e.target.value})}  />\n                <label forhtml=\"address\" className=\"label-name\">\n                    <span className=\"content-name\">Address</span>\n                    {errors.address && <small className=\"errors\">{errors.address}</small>}\n                </label>\n            </div>\n            </div>\n        \n        <div className=\"row\">\n            <div className=\"form-field\">\n              <div className=\"name-section\">\n                  <input  type=\"email\" name=\"enail\" onChange={e => setInfo({...info, email : e.target.value})} />\n                  <label forhtml=\"email\" className=\"label-name\">\n                      <span className=\"content-name\">Email</span>\n                      {errors.email && <small className=\"errors\">{errors.email}</small>}\n                  </label>\n              </div>\n              </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"form-field\">\n                  <div className=\"name-section\">\n                      <input type=\"password\" id=\"password\" name=\"password\" onChange={e => setInfo({...info, password : e.target.value})} />\n                      <label forhtml=\"password\" className=\"label-name\">\n                          <span className=\"content-name\">Password</span>\n                          {errors.password && <small  className=\"errors\">{errors.password}</small>}\n                      </label>\n                  </div>\n                  </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"form-field\">\n                      <div className=\"name-section\">\n                          <input type=\"password\"  name=\"repeatpassword\" id=\"repeatpassword\" onChange={e => setInfo({...info, repeatpassword : e.target.value})}   />\n                          <label forhtml=\"repeatpassword\" className=\"label-name\">\n                              <span className=\"content-name\">{errors.repeatpassword}</span>\n                              {errors.repeatpassword && <small className=\"errors\" >\n        {errors.repeatpassword}\n     </small>}\n                          </label>\n                      </div>\n                      </div>\n                      </div>\n                     \n                        <div className=\"form-field\">\n                      <button type=\"submit\" className=\"button button2\">Sign up</button>\n                        </div>\n    </form>\n\n </div>\n\n<img className=\"blueImg2\" src={blueImg} alt=\"blueImg2\"></img>\n        </div>\n    )\n}\n\nexport default RegisterBusiness\n"]},"metadata":{},"sourceType":"module"}